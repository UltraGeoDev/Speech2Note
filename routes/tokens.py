"""Tokens route module."""

from __future__ import annotations

from typing import TYPE_CHECKING

import telebot  # type: ignore[import-untyped]

if TYPE_CHECKING:
    from logging import Logger

    from data.user_database import UserDatabase


class TokensRoute:
    """Route handling user requests related to tokens."""

    def __init__(  # type: ignore[no-any-unimported]
        self: TokensRoute,
        bot: telebot.TeleBot,
        logger: Logger,
        user_database: UserDatabase,
    ) -> None:
        """Create TokensRoute.

        Args:
        ----
            bot (telebot.TeleBot): The telebot instance.
            logger (CustomLogger): The logger instance.
            user_database (UserDatabase): The user database instance.

        """
        self.bot = bot
        self.logger = logger
        self.database = user_database

        @bot.message_handler(commands=["tokens"])
        def tokens(message: telebot.types.Message) -> None:  # type: ignore[no-any-unimported]
            """Tokens command.

            Args:
            ----
                message (telebot.types.Message): The message object received from the user.

            Returns:
            -------
                None

            """  # noqa: E501
            self.__tokens(message)

        self.logger.info("Tokens route initialized.", extra={"message_type": "server"})

    def __tokens(self: TokensRoute, message: telebot.types.Message) -> None:  # type: ignore[no-any-unimported]
        """Handle /tokens command.

        Args:
        ----
            message (telebot.types.Message): The message object received from the user.

        Returns:
        -------
            None

        """
        code, user = self.database.get_user(message.chat.id)
        ok_code = 200

        if code != ok_code:
            self.bot.send_message(
                message.chat.id,
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ –ø–æ–∑–∂–µ.\n–ú—ã —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ —ç—Ç–∏–º.",  # noqa: RUF001, E501
            )

        if user is None:
            self.database.new_user(message.chat.id, message.from_user.username)
            self.bot.send_message(
                message.chat.id,
                f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.username}!\n"
                "---------------\n"
                "–¢—ã –Ω–µ –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω—ã, –ø–æ—Ç–æ–º—É —á—Ç–æ —Ç—ã –Ω–µ –±—ã–ª –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω.\n"
                "–ù–æ —É –º–µ–Ω—è —Ö–æ—Ä–æ—à–∏–µ –Ω–æ–≤–æ—Å—Ç–∏! –Ø —É–∂–µ —Ç–µ–±—è –∑–∞—Ä–∞–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª!\n"
                "–ü—Ä–∏—à–ª–∏ –º–Ω–µ –∞—É–¥–∏–æ—Ñ–∞–π–ª, –∏ —è –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Å–ø–µ–∫—Ç –∏–∑ –Ω–µ–≥–æ.\n"
                "---------------\n"
                "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ—Ñ–∏–ª—å /profile\n"
                "–ü–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω—ã /tokens\n"
                "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ /about\n"
                "---------------",
            )
            return

        button1 = telebot.types.InlineKeyboardButton(
            "üí∏ 10 —Ç–æ–∫–µ–Ω–æ–≤ = 30‚ÇΩ",
            callback_data="10_tokens",
        )
        button2 = telebot.types.InlineKeyboardButton(
            "üí∏ 50 —Ç–æ–∫–µ–Ω–æ–≤ = 150‚ÇΩ",
            callback_data="50_tokens",
        )
        button3 = telebot.types.InlineKeyboardButton(
            "üí∏ 100 —Ç–æ–∫–µ–Ω–æ–≤ = 290‚ÇΩ (-3%)",
            callback_data="100_tokens",
        )
        button4 = telebot.types.InlineKeyboardButton(
            "üí∏ 300 —Ç–æ–∫–µ–Ω–æ–≤ = 830‚ÇΩ (-7%)",
            callback_data="300_tokens",
        )
        button5 = telebot.types.InlineKeyboardButton(
            "üí∏ 1000 —Ç–æ–∫–µ–Ω–æ–≤ = 2700‚ÇΩ (-10%)",
            callback_data="300_tokens",
        )

        keyboard = telebot.types.InlineKeyboardMarkup(
            [[button1], [button2], [button3], [button4], [button5]],
        )

        self.bot.send_message(
            message.chat.id,
            "**–ú–µ–Ω—é –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤.**\n–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é /start\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–∫—É–ø–∫–∏:",  # noqa: RUF001
            reply_markup=keyboard,
            parse_mode="Markdown",
        )
